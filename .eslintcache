[{"/home/dscription/Code/coop/mern-jwt-auth/src/index.js":"1","/home/dscription/Code/coop/mern-jwt-auth/src/serviceWorker.js":"2","/home/dscription/Code/coop/mern-jwt-auth/src/pages/App/App.jsx":"3","/home/dscription/Code/coop/mern-jwt-auth/src/services/userService.js":"4","/home/dscription/Code/coop/mern-jwt-auth/src/services/authService.js":"5","/home/dscription/Code/coop/mern-jwt-auth/src/components/TuxComponents/UniversalComponents.js":"6","/home/dscription/Code/coop/mern-jwt-auth/src/pages/Signup/Signup.jsx":"7","/home/dscription/Code/coop/mern-jwt-auth/src/pages/Login/Login.jsx":"8","/home/dscription/Code/coop/mern-jwt-auth/src/pages/User/User.jsx":"9","/home/dscription/Code/coop/mern-jwt-auth/src/pages/CreateActivity/CreateActivity.jsx":"10","/home/dscription/Code/coop/mern-jwt-auth/src/pages/Landing/Landing.jsx":"11","/home/dscription/Code/coop/mern-jwt-auth/src/pages/IndexActivities/IndexActivities.jsx":"12","/home/dscription/Code/coop/mern-jwt-auth/src/pages/Manager/Manager.jsx":"13","/home/dscription/Code/coop/mern-jwt-auth/src/pages/PreviewActivity/PreviewActivity.jsx":"14","/home/dscription/Code/coop/mern-jwt-auth/src/pages/PasswordResetRequest/PasswordResetRequest.jsx":"15","/home/dscription/Code/coop/mern-jwt-auth/src/pages/Activity/Activity.jsx":"16","/home/dscription/Code/coop/mern-jwt-auth/src/pages/CoryTestingGround/CoryTestingGround.jsx":"17","/home/dscription/Code/coop/mern-jwt-auth/src/components/NavBar/NavBar.jsx":"18","/home/dscription/Code/coop/mern-jwt-auth/src/services/tokenService.js":"19","/home/dscription/Code/coop/mern-jwt-auth/src/components/TuxComponents/LoginComponents.js":"20","/home/dscription/Code/coop/mern-jwt-auth/src/services/activityService.js":"21","/home/dscription/Code/coop/mern-jwt-auth/src/services/groupService.js":"22","/home/dscription/Code/coop/mern-jwt-auth/src/services/mail-api.js":"23","/home/dscription/Code/coop/mern-jwt-auth/src/components/TuxComponents/NavComponents.js":"24","/home/dscription/Code/coop/mern-jwt-auth/src/SampleData/SampleData.js":"25","/home/dscription/Code/coop/mern-jwt-auth/src/components/PreQuestionForm/PreQuestionForm.jsx":"26","/home/dscription/Code/coop/mern-jwt-auth/src/components/SignupForm/SignupForm.jsx":"27","/home/dscription/Code/coop/mern-jwt-auth/src/components/ManagerActivities/ManagerActivities.jsx":"28","/home/dscription/Code/coop/mern-jwt-auth/src/components/ManagerStudentResults/ManagerStudentResults.jsx":"29","/home/dscription/Code/coop/mern-jwt-auth/src/components/ManageGroupMembers/ManageGroupMembers.jsx":"30","/home/dscription/Code/coop/mern-jwt-auth/src/components/ActivityBody/ActivityBody.jsx":"31","/home/dscription/Code/coop/mern-jwt-auth/src/components/CreateQuestionForm/CreateQuestionForm.jsx":"32","/home/dscription/Code/coop/mern-jwt-auth/src/components/ActivityHeader/ActivityHeader.jsx":"33","/home/dscription/Code/coop/mern-jwt-auth/src/components/SideBarNav/SideBarNav.jsx":"34","/home/dscription/Code/coop/mern-jwt-auth/src/components/TuxComponents/FormComponents.js":"35","/home/dscription/Code/coop/mern-jwt-auth/src/components/SignupForm/EmailForm.jsx":"36","/home/dscription/Code/coop/mern-jwt-auth/src/components/SignupForm/GeneralForm.jsx":"37","/home/dscription/Code/coop/mern-jwt-auth/src/components/CreateGroup/CreateGroup.jsx":"38","/home/dscription/Code/coop/mern-jwt-auth/src/components/ModifyGroup/ModifyGroup.jsx":"39","/home/dscription/Code/coop/mern-jwt-auth/src/components/Question/Question.jsx":"40","/home/dscription/Code/coop/mern-jwt-auth/src/components/ActivityInvite/ActivityInvite.jsx":"41","/home/dscription/Code/coop/mern-jwt-auth/src/components/Overview/Overview.jsx":"42","/home/dscription/Code/coop/mern-jwt-auth/src/components/InjectHTML/InjectHTML.jsx":"43","/home/dscription/Code/coop/mern-jwt-auth/src/components/ProgressBar/ProgressBar.jsx":"44","/home/dscription/Code/coop/mern-jwt-auth/src/components/TuxComponents/ActivitiesComponents.js":"45","/home/dscription/Code/coop/mern-jwt-auth/src/components/Answer/Answer.jsx":"46","/home/dscription/Code/coop/mern-jwt-auth/src/components/GroupUserTable/GroupUserTable.jsx":"47","/home/dscription/Code/coop/mern-jwt-auth/src/components/EmailCheckbox/EmailCheckbox.jsx":"48","/home/dscription/Code/coop/mern-jwt-auth/src/components/Feedback/Feedback.jsx":"49","/home/dscription/Code/coop/mern-jwt-auth/src/SampleData/HeuristicsSampleData.js":"50","/home/dscription/Code/coop/mern-jwt-auth/src/components/ActivityLinks/ActivityLinks.jsx":"51"},{"size":671,"mtime":1610990958822,"results":"52","hashOfConfig":"53"},{"size":5086,"mtime":1604690893263,"results":"54","hashOfConfig":"53"},{"size":2475,"mtime":1611164067774,"results":"55","hashOfConfig":"53"},{"size":1319,"mtime":1611082255422,"results":"56","hashOfConfig":"53"},{"size":1735,"mtime":1611082255422,"results":"57","hashOfConfig":"53"},{"size":13115,"mtime":1611167040084,"results":"58","hashOfConfig":"53"},{"size":814,"mtime":1610056801071,"results":"59","hashOfConfig":"53"},{"size":3056,"mtime":1611162496364,"results":"60","hashOfConfig":"53"},{"size":649,"mtime":1611163964004,"results":"61","hashOfConfig":"53"},{"size":5557,"mtime":1609435565236,"results":"62","hashOfConfig":"53"},{"size":752,"mtime":1610554243450,"results":"63","hashOfConfig":"53"},{"size":3105,"mtime":1609864657055,"results":"64","hashOfConfig":"53"},{"size":3254,"mtime":1611162496364,"results":"65","hashOfConfig":"53"},{"size":3156,"mtime":1608222989956,"results":"66","hashOfConfig":"53"},{"size":1786,"mtime":1609258437447,"results":"67","hashOfConfig":"53"},{"size":3390,"mtime":1611165181754,"results":"68","hashOfConfig":"53"},{"size":5025,"mtime":1610136076300,"results":"69","hashOfConfig":"53"},{"size":1226,"mtime":1611162496364,"results":"70","hashOfConfig":"53"},{"size":726,"mtime":1606344075290,"results":"71","hashOfConfig":"53"},{"size":2602,"mtime":1611167040084,"results":"72","hashOfConfig":"53"},{"size":1923,"mtime":1610822451070,"results":"73","hashOfConfig":"53"},{"size":1288,"mtime":1609887336605,"results":"74","hashOfConfig":"53"},{"size":398,"mtime":1610050305501,"results":"75","hashOfConfig":"53"},{"size":781,"mtime":1611162496364,"results":"76","hashOfConfig":"53"},{"size":2692,"mtime":1609180259729,"results":"77","hashOfConfig":"53"},{"size":2537,"mtime":1608222996246,"results":"78","hashOfConfig":"53"},{"size":2475,"mtime":1610056667451,"results":"79","hashOfConfig":"53"},{"size":2420,"mtime":1611167040084,"results":"80","hashOfConfig":"53"},{"size":799,"mtime":1609969042490,"results":"81","hashOfConfig":"53"},{"size":1768,"mtime":1610994190602,"results":"82","hashOfConfig":"53"},{"size":875,"mtime":1611167166094,"results":"83","hashOfConfig":"53"},{"size":1905,"mtime":1608222996236,"results":"84","hashOfConfig":"53"},{"size":516,"mtime":1611162496364,"results":"85","hashOfConfig":"53"},{"size":1821,"mtime":1610828242510,"results":"86","hashOfConfig":"53"},{"size":596,"mtime":1608222996246,"results":"87","hashOfConfig":"53"},{"size":1680,"mtime":1611162496364,"results":"88","hashOfConfig":"53"},{"size":3432,"mtime":1610822414930,"results":"89","hashOfConfig":"53"},{"size":699,"mtime":1610060657791,"results":"90","hashOfConfig":"53"},{"size":1779,"mtime":1610994190602,"results":"91","hashOfConfig":"53"},{"size":1521,"mtime":1611167183204,"results":"92","hashOfConfig":"53"},{"size":4352,"mtime":1611167040084,"results":"93","hashOfConfig":"53"},{"size":242,"mtime":1610828242510,"results":"94","hashOfConfig":"53"},{"size":1832,"mtime":1611088247062,"results":"95","hashOfConfig":"53"},{"size":579,"mtime":1610048368381,"results":"96","hashOfConfig":"53"},{"size":2392,"mtime":1611162496364,"results":"97","hashOfConfig":"53"},{"size":677,"mtime":1610998089672,"results":"98","hashOfConfig":"53"},{"size":1013,"mtime":1610472263930,"results":"99","hashOfConfig":"53"},{"size":1022,"mtime":1610136076300,"results":"100","hashOfConfig":"53"},{"size":792,"mtime":1609951116119,"results":"101","hashOfConfig":"53"},{"size":234513,"mtime":1611167325244,"results":"102","hashOfConfig":"53"},{"size":669,"mtime":1611166546944,"results":"103","hashOfConfig":"53"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"107"},"1ctz79t",{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"112","messages":"113","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"107"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"107"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"107"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"141","messages":"142","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"107"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"107"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"151","messages":"152","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"107"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"107"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"107"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"107"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"107"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"196","messages":"197","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"198","usedDeprecatedRules":"107"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"213","usedDeprecatedRules":"107"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},"/home/dscription/Code/coop/mern-jwt-auth/src/index.js",["220"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport './index.css';\nimport App from './pages/App/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <Router>\n    <React.StrictMode>\n      <Route render={({ history }) => <App history={history} />} />\n    </React.StrictMode>\n  </Router>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n",["221","222"],"/home/dscription/Code/coop/mern-jwt-auth/src/serviceWorker.js",[],"/home/dscription/Code/coop/mern-jwt-auth/src/pages/App/App.jsx",["223","224"],"/home/dscription/Code/coop/mern-jwt-auth/src/services/userService.js",["225","226"],"import tokenService from \"../services/tokenService\";\nconst BASE_URL = \"/api/users/\";\n\n// restrict access to functions on the front end\n\n// this one works cory\nfunction getAllUsers() {\n  return fetch(\n    BASE_URL,\n    {\n      headers: { 'Authorization': \"Bearer \" + tokenService.getToken() },\n    },\n    { mode: \"cors\" }\n  ).then((res) => res.json());\n}\n\n// this one works cory\nfunction deleteUser(id) {\n  return fetch(`${BASE_URL}${id}`, {\n    method: 'DELETE',\n    headers: {\n      'Authorization': 'Bearer ' + tokenService.getToken()\n    }\n    }, \n    {mode: \"cors\"})\n  .then(res => res.json());\n}\n\n// this one works cory\nfunction getUser(user) {\n  return fetch(`${BASE_URL}${user.id}`, {mode: \"cors\"})\n  .then(res => res.json())\n}\n\nfunction getCurrentUser() {\n  return fetch(`${BASE_URL}`+'getMe', {mode: 'cors'})\n  .then(res => res.json())\n}\n\n// this one works cory\nfunction updateUser(user) {\n  // console.log('update service function', user)\n  return fetch(`${BASE_URL}${user._id}`, {\n      method: \"PUT\",\n      headers: {\n        'content-type': 'application/json', \n        'Authorization': 'Bearer ' + tokenService.getToken()\n      },\n      body: JSON.stringify(user)\n  }, {mode: \"cors\"})\n  .then(res => res.json());\n}\n\nexport default {\n  getAllUsers,\n  deleteUser,\n  getUser,\n  updateUser,\n  getCurrentUser\n}","/home/dscription/Code/coop/mern-jwt-auth/src/services/authService.js",["227"],"import tokenService from \"./tokenService\";\nconst BASE_URL = '/api/auth/';\n\nfunction signup(user) {\n  return fetch(BASE_URL + 'signup', {\n    method: 'POST',\n    headers: new Headers({'Content-Type': 'application/json'}),\n    body: JSON.stringify(user)\n  })\n  .then(res => {\n    // console.log(res, '<-- response object')\n    return res.json();\n  })\n  .then(json => {\n    if(json.token) return json;\n    // console.log(json, '<-- the error')\n    throw new Error(`${json.err}`)\n  })\n  .then(({ token }) => {\n    tokenService.setToken(token);\n    window.location = \n    'http://localhost:3000/activity/heuristics'\n    // 'http://taketux.io/activity/heuristics'\n    // 'http://tux-staging.herokuapp.com/activity/heuristics'\n  })\n}\n\nfunction getUser() {\n  return tokenService.getUserFromToken();\n}\n\nfunction logout() {\n  tokenService.removeToken();\n}\n\nfunction logoutFromGoogle() {\n  return fetch(BASE_URL + \"logout\")\n  .then(\n    console.log('logging out from google')\n  )\n}\n \nfunction login(creds) {\n  // console.log('auth service login function -- creds', creds)\n  return fetch(BASE_URL + \"login\", {\n    method: \"POST\",\n    headers: new Headers({ \"Content-Type\": \"application/json\" }),\n    body: JSON.stringify(creds),\n  })\n  .then((res) => {\n    // Valid login if we have a status of 2xx (res.ok)\n    if (res.ok) return res.json();\n    throw new Error(\"Bad Credentials!\");\n  })\n  .then(({ token }) => \n  tokenService.setToken(token)\n  )\n}\n\n// add this function to the google strategy:\n// getJWTAfterGoogleLogin (req, res) <--this is on the front end\n// respond with a token from the server\n// put token in localStorage\n// set the token to the google login\n\nexport default {\n  signup,\n  getUser,\n  logout,\n  logoutFromGoogle,\n  login,\n};","/home/dscription/Code/coop/mern-jwt-auth/src/components/TuxComponents/UniversalComponents.js",[],"/home/dscription/Code/coop/mern-jwt-auth/src/pages/Signup/Signup.jsx",[],"/home/dscription/Code/coop/mern-jwt-auth/src/pages/Login/Login.jsx",[],"/home/dscription/Code/coop/mern-jwt-auth/src/pages/User/User.jsx",["228"],"/home/dscription/Code/coop/mern-jwt-auth/src/pages/CreateActivity/CreateActivity.jsx",[],"/home/dscription/Code/coop/mern-jwt-auth/src/pages/Landing/Landing.jsx",[],"/home/dscription/Code/coop/mern-jwt-auth/src/pages/IndexActivities/IndexActivities.jsx",[],"/home/dscription/Code/coop/mern-jwt-auth/src/pages/Manager/Manager.jsx",["229","230","231","232"],"import React, { useState, useEffect } from 'react';\n// import { Button } from 'react-bootstrap';\n// import 'bootstrap/dist/css/bootstrap.min.css';\nimport groupAPI from '../../services/groupService';\nimport * as mailAPI from '../../services/mail-api';\nimport ManagerActivites from '../../components/ManagerActivities/ManagerActivities';\nimport ManagerStudentResults from '../../components/ManagerStudentResults/ManagerStudentResults';\n\nimport ManageGroupMembers from '../../components/ManageGroupMembers/ManageGroupMembers';\n\nconst Manager = () => {\n  const [newGroupName, setNewGroupName] = useState('');\n  const [textInput, setTextInput] = useState('');\n  const [results, setResults] = useState('');\n  const [groups, setGroups] = useState('');\n  const [selectedGroupIndex, setSelectedGroupIndex] = useState('');\n\n  const getAllGroups = async () => {\n    return await groupAPI.getAll();\n  };\n\n  useEffect(() => {\n    const retreivedGroups = getAllGroups();\n    console.log(retreivedGroups);\n    retreivedGroups.then((newGroups) => {\n      setGroups(newGroups);\n    });\n  }, []);\n\n  const handleInputChange = (e) => {\n    e.preventDefault();\n    const { value } = e.target;\n    // setInput(value);\n  };\n\n  const handleTextInputChange = (e) => {\n    e.preventDefault();\n    const { value } = e.target;\n    setTextInput(value);\n  };\n\n  const splitGroupMembers = (textInput) => {\n    // Split and trim emails\n    const members = textInput.split(',');\n    const trimmed = members.map((member) => member.trim());\n    return trimmed;\n  };\n\n  const sendEmailInvite = async (group) => {\n    await mailAPI.create(group);\n  };\n\n  const handleAddToGroup = async () => {\n    console.log(groups);\n    const emails = splitGroupMembers(textInput);\n    const inviteList = [];\n    emails.forEach((email) =>\n      inviteList.push({ email: email, invited: false, signedUp: false })\n    );\n    const updatedGroups = groups;\n    const selectedGroup = updatedGroups[selectedGroupIndex];\n\n    inviteList.forEach((member) => {\n      selectedGroup.invited.push({\n        email: member.email,\n        invited: false,\n        signedUp: false,\n      });\n    });\n\n    const update = await groupAPI.update(selectedGroup);\n    console.log(update);\n    setGroups(updatedGroups);\n    setTextInput('');\n  };\n\n  const handleCreateGroup = async () => {\n    const group = await groupAPI.create({ name: newGroupName });\n    const updatedGroups = groups;\n    updatedGroups.push(group);\n    setGroups(updatedGroups);\n    setNewGroupName('');\n  };\n\n  return (\n    <>\n      <h1>Manager Landing Page</h1>\n      <ManagerStudentResults results={results} />\n      <ManagerActivites\n        groups={groups}\n        setGroups={setGroups}\n        selectedGroupIndex={selectedGroupIndex}\n        setSelectedGroupIndex={setSelectedGroupIndex}\n      />\n      <ManageGroupMembers\n        groups={groups}\n        selectedGroupIndex={selectedGroupIndex}\n        setSelectedGroupIndex={setSelectedGroupIndex}\n        textInput={textInput}\n        handleTextInputChange={handleTextInputChange}\n        handleAddToGroup={handleAddToGroup}\n        newGroupName={newGroupName}\n        setNewGroupName={setNewGroupName}\n        handleCreateGroup={handleCreateGroup}\n      />\n    </>\n  );\n};\n\nexport default Manager;\n","/home/dscription/Code/coop/mern-jwt-auth/src/pages/PreviewActivity/PreviewActivity.jsx",[],"/home/dscription/Code/coop/mern-jwt-auth/src/pages/PasswordResetRequest/PasswordResetRequest.jsx",[],"/home/dscription/Code/coop/mern-jwt-auth/src/pages/Activity/Activity.jsx",["233","234","235"],"/home/dscription/Code/coop/mern-jwt-auth/src/pages/CoryTestingGround/CoryTestingGround.jsx",["236","237"],"import React, { Component } from 'react';\n// import { Route, Link } from 'react-router-dom'\nimport activityService from '../../services/activityService';\nimport styled from 'styled-components'\nimport authService from '../../services/authService'\nimport userService from '../../services/userService'\nimport tokenService from '../../services/tokenService'\nimport { user, activityData } from '../../SampleData/SampleData'\nimport groupService from '../../services/groupService';\n\n// const ActivityCard = styled.div`\n// border: solid 2px black;\n// background-color: white;\n// align-items: center;\n// width: 300px;\n// margin: 10px auto;\n// `;\n\nconst Container = styled.div`\nalign-items: center;\ntext-align: center;\n`\n\nclass TestingGround extends Component {\n  state = { \n   } \n\n  handlePromotion = async () => {\n    let promotion = await authService.getUser()\n    console.log('user', promotion)\n    promotion.userPermissions = 100\n    console.log('now 100', promotion)\n    this.handlePermissionChange(promotion)\n    const newUser = authService.getUser()\n    console.log('ding', newUser)\n  }\n\n  handleDemotion = async () => {\n    let promotion = await authService.getUser()\n    console.log('user', promotion)\n    promotion.userPermissions = 0\n    console.log('now 100', promotion)\n    this.handlePermissionChange(promotion)\n    const newUser = authService.getUser()\n    console.log('ding', newUser)\n  }\n\n  handlePermissionChange = async (promotion) => {\n    console.log('callback')\n    let promotedUser = await userService.updateUser(promotion)\n    console.log('promoted', promotedUser)\n  }\n\n  handleGetAllUsers = async () => {\n    const myToken = await tokenService.getToken()\n    console.log('my token handle function', myToken)\n    const allUsers = await userService.getAllUsers();\n    console.log(allUsers)\n  }\n\n  handleAssignActivity = async () => {\n    const activity = await activityService.getOne('5fce85093399a6d182c2bf7e')\n    const activityUser = await userService.getUser('5fd790083bf7c9788417821c')\n    activityUser.assignments.push(activity)\n    await userService.updateUser(activityUser)\n    console.log('activity assigned', activityUser)\n  }\n  \n  handleAddGroup = async () => {\n  const groupData = {\n    name: \"Test Group 4\",\n    dateStarted: 2020-12-21,\n    endingDate: 2020-12-22,\n    users: [],\n    createdBy: \"\"\n  }\n  const createGroup = await groupService.create(groupData)\n  console.log('create group', createGroup)\n}\n  \n  // async componentDidMount() {\n\n  //   console.log(this.state.user)\n  //   console.log(this.state.users)\n    \n  //   const banana = {\n  //     name: \"Cory Test\",\n  //     email: \"jt@dog.com\",\n  //     password: \"abc123\",\n  //     assignments: [],\n  //     _id: \"5fc5428eed9ce66e6246e158\"\n  //   }\n  \n  //   const updatedUser = await userService.updateUser(banana)\n  //   console.log(updatedUser)\n  \n  // }\n\n  // handleUpdateUser = async updatedUserData => {\n  //   const updatedUser = await userService.updateUser(updatedUserData);\n  //   const newUsersArray = this.state.users.map(u =>\n  //     u._id === updatedUser._id? updatedUser : u);\n  //   this.setState(\n  //     { users: newUsersArray },\n  //     window.location.reload\n  //     // () => this.props.history.push('/users')\n  //   );\n  // }\n\n  // handleAddActivity = async newActivityData => {\n  //   const newactivity = await activityService.create(newActivityData);\n  //   newactivity.createdBy = { name: this.props.user.name, _id: this.props.user._id}\n  //   this.setState(state => ({\n  //     activitys: [...state.activitys, newactivity]\n  //   }), () => this.props.history.push('/activitys'));\n  // }\n\n\n  // // this can be reconnected when we link up the front end\n\n  // handleDeleteactivity = async activityId => {\n  //   if (authService.getUser()) {\n  //     await activityService.deleteOne(activityId);\n  //     this.setState(state => ({\n  //       activitys: state.activitys.filter(l => l._id !== activityId)\n  //     }), () => \n  //     // this.props.history.push('/activitys')\n  //     window.location.reload)\n  //   } else {\n  //     this.props.history.push('/')\n  //   }\n  // }\n\n  // handleUpdateActivity = async updatedActivityData => {\n  //   const updatedactivity = await activityService.update(updatedActivityData);\n  //   const newactivitiesArray = this.state.activities.map(l =>\n  //     l._id === updatedactivity._id? updatedactivity : l);\n  //   this.setState(\n  //     { activities: newactivitiesArray },\n  //     () => this.props.history.push('/activities')\n  //   );\n  // }\n  \n  render() { \n    return ( \n      <Container>\n        <button onClick={this.handleGetAllUsers}>get users</button>\n        <button onClick={this.handlePromotion}>Promote Me</button>\n        <button onClick={this.handleDemotion}>Demote Me</button>\n        <button onClick={this.handleAddGroup}>add group</button>\n        <button onClick={this.handleAssignActivity}>assign JT</button>\n        <a href='http://localhost:3000/logout'>Log Out</a>\n        <h1>Cory Rules</h1>\n      </Container>\n    )}\n}\n \nexport default TestingGround;","/home/dscription/Code/coop/mern-jwt-auth/src/components/NavBar/NavBar.jsx",[],"/home/dscription/Code/coop/mern-jwt-auth/src/services/tokenService.js",["238"],"function setToken(token) {\n  localStorage.setItem(\"token\", token);\n}\n\nfunction getToken() {\n  let token = localStorage.getItem(\"token\");\n  if (token) {\n    // Check if expired, remove if it is\n    const payload = JSON.parse(atob(token.split(\".\")[1]));\n    // JWT's exp is expressed in seconds, not milliseconds, so convert\n    if (payload.exp < Date.now() / 1000) {\n      localStorage.removeItem(\"token\");\n      token = null;\n    }\n  }\n  return token;\n}\n\nfunction getUserFromToken() {\n  const token = getToken();\n  return token ? JSON.parse(atob(token.split(\".\")[1])).user : null;\n}\n\nfunction removeToken() {\n  localStorage.removeItem(\"token\");\n}\n\nexport default {\n  setToken,\n  getToken,\n  getUserFromToken,\n  removeToken,\n};","/home/dscription/Code/coop/mern-jwt-auth/src/components/TuxComponents/LoginComponents.js",[],"/home/dscription/Code/coop/mern-jwt-auth/src/services/activityService.js",["239"],"import tokenService from '../services/tokenService';\nconst BASE_URL = '/api/activities/';\n\nexport default {\n  create,\n  getAll,\n  deleteOne,\n  getOne,\n  update,\n};\n\n// this works cory\nexport function create(activity) {\n    console.log('create an activity')\n  return fetch(\n    BASE_URL,\n    {\n      method: 'POST',\n      headers: {\n        'content-type': 'application/json',\n        'Authorization': 'Bearer' + tokenService.getToken()\n      },\n      body: JSON.stringify(activity),\n    },\n    {\n      mode: 'cors',\n    }\n  ).then((res) => res.json());\n}\n\n// this works cory\nfunction getAll() {\n    console.log('get all activities')\n  return fetch(\n    BASE_URL,\n    {\n      method: 'GET',\n      headers: {\n        'content-type': 'application/json',\n        //  'Authorization': 'Bearer' + tokenService.getToken()\n      },\n    },\n    { mode: 'cors' }\n  ).then((res) => res.json());\n}\n\n// this works cory\nfunction deleteOne(id) {\n    console.log('delete activity')\n  return fetch(\n    `${BASE_URL}${id}`,\n    {\n      method: 'DELETE',\n      headers: { Authorization: 'Bearer ' + tokenService.getToken() },\n    },\n    { mode: 'cors' }\n  ).then((res) => res.json());\n}\n\n// this works cory\nfunction getOne(activityId) {\n    console.log('one activity')\n  return fetch(\n      `${BASE_URL}${activityId}`, \n      {\n        method: 'GET',\n        headers: {\n          'content-type': 'application/json',\n          // 'Authorization': 'Bearer' + tokenService.getToken()\n        },\n      },\n      {  mode: 'cors' }\n    ).then((res) => res.json());\n}\n\n// this works cory\nfunction update(activity) {\n    return fetch(\n      `${BASE_URL}${activity._id}`,\n      {\n        method: 'PUT',\n        headers: {\n          'content-type': 'application/json',\n        //   Authorization: 'Bearer ' + tokenService.getToken(),\n        },\n        body: JSON.stringify(activity),\n      },\n      { mode: 'cors' }\n    ).then((res) => res.json());\n  }\n","/home/dscription/Code/coop/mern-jwt-auth/src/services/groupService.js",["240"],"import tokenService from \"../services/tokenService\";\nconst BASE_URL = \"/api/groups/\";\n\nfunction create(group) {\n    const myToken = tokenService.getToken()\n    console.log(myToken)\n    return fetch(BASE_URL, {\n        method: 'POST',\n        headers: { \n            'content-type': 'application/json', \n            // 'Authorization': 'Bearer' + tokenService.getToken() \n        },\n        body: JSON.stringify(group) \n        }, { mode: 'cors' })\n        .then(res => res.json());\n}\n\nfunction getAll() {\n    return fetch(BASE_URL, { mode: 'cors' })\n    .then(res => res.json())\n}\n\nfunction deleteOne(id) {\n    return fetch(`${BASE_URL}${id}`, {\n        method: 'DELETE',\n        headers: {'Authorization': 'Bearer ' + tokenService.getToken()}\n    }, {mode: \"cors\"})\n    .then(res => res.json());\n}\n\nfunction getOne(group) {\n    return fetch(`${BASE_URL}${group}`, {mode: \"cors\"})\n    .then(res => res.json())\n}\n\nfunction update(group) {\n    return fetch(`${BASE_URL}${group._id}`, {\n        method: \"PUT\",\n        headers: {'content-type': 'application/json', 'Authorization': 'Bearer ' + tokenService.getToken()},\n        body: JSON.stringify(group)\n    }, {mode: \"cors\"})\n    .then(res => res.json());\n}\n\nexport default {\n    create,\n    getAll,\n    deleteOne,\n    getOne,\n    update\n}","/home/dscription/Code/coop/mern-jwt-auth/src/services/mail-api.js",["241"],"import tokenService from '../services/tokenService';\nconst BASE_URL = '/api/nodemail/';\n\nexport function create(group) {\n    return fetch(BASE_URL, {\n        method: \"POST\",\n        headers: { 'content-type': 'application/json', \n        // 'Authorization': 'Bearer ' + tokenService.getToken() \n    },\n        body: JSON.stringify(group)\n    }, { mode: \"cors\" })\n        .then(res => res.json());\n}","/home/dscription/Code/coop/mern-jwt-auth/src/components/TuxComponents/NavComponents.js",[],"/home/dscription/Code/coop/mern-jwt-auth/src/SampleData/SampleData.js",[],"/home/dscription/Code/coop/mern-jwt-auth/src/components/PreQuestionForm/PreQuestionForm.jsx",[],"/home/dscription/Code/coop/mern-jwt-auth/src/components/SignupForm/SignupForm.jsx",["242"],"import React from 'react';\nimport { Formik, Form } from 'formik';\nimport EmailForm from './EmailForm';\nimport GeneralForm from './GeneralForm';\nimport authAPI from '../../services/authService';\nimport * as U from '../TuxComponents/UniversalComponents'\n\nfunction validateEmail(value) {\n  let error;\n  if (!value) {\n    error = 'Email Required';\n    console.log(error);\n  } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(value)) {\n    error = 'Invalid email address';\n    console.log(error);\n  } else {\n    error = '';\n  }\n  return error;\n}\n\nfunction validatePasswords(password, passwordConf) {\n  let error;\n  error = password !== passwordConf ? 'Passwords Must Match' : '';\n  return error;\n}\n\nconst SignupForm = ({groupId, email}) => {\n  return (\n    <Formik\n      initialValues={{\n        userData: {\n          email: email,\n          firstName: '',\n          lastName: '',\n          password: '',\n          passwordConf: '',\n        },\n        continue: false,\n      }}\n      onSubmit={(values) => {\n        console.log(values);\n        authAPI.signup(values.userData);\n      }}\n      validate={(values) => {\n        const errors = {};\n        if (values.userData.email) {\n          const error = validateEmail(values.userData.email);\n          error.length > 0 && (errors.email = error);\n        }\n\n        // TODO: Need better password validation.\n        if (!values.userData.password) {\n          const error = 'Password Required';\n          errors.password = error;\n        }\n\n        if (values.userData.password && values.userData.passwordConf) {\n          const error = validatePasswords(\n            values.userData.password,\n            values.userData.passwordConf\n          );\n          error.length > 0 && (errors.passwordConf = error);\n        }\n        return errors;\n      }}\n    >\n      {({ errors, touched, handleChange, values, handleSubmit }) => (\n        <Form onSubmit={handleSubmit}>\n          {!values.continue && (\n            <EmailForm \n              errors={errors}\n              touched={touched}\n              values={values}\n              handleChange={handleChange}\n            />\n          )}\n          {values.continue && (\n            <GeneralForm\n              errors={errors}\n              touched={touched}\n              values={values}\n              handleChange={handleChange}\n              handleSubmit={handleSubmit}\n            />\n          )}\n        </Form>\n      )}\n    </Formik>\n  );\n};\n\nexport default SignupForm;\n","/home/dscription/Code/coop/mern-jwt-auth/src/components/ManagerActivities/ManagerActivities.jsx",[],"/home/dscription/Code/coop/mern-jwt-auth/src/components/ManagerStudentResults/ManagerStudentResults.jsx",[],"/home/dscription/Code/coop/mern-jwt-auth/src/components/ManageGroupMembers/ManageGroupMembers.jsx",[],"/home/dscription/Code/coop/mern-jwt-auth/src/components/ActivityBody/ActivityBody.jsx",["243"],"import React from 'react';\nimport * as U from '../../components/TuxComponents/UniversalComponents';\nimport Question from '../../components/Question/Question';\nimport InjectHTML from '../../components/InjectHTML/InjectHTML';\nimport Overview from '../../components/Overview/Overview';\nimport ActivityLinks from '../ActivityLinks/ActivityLinks';\n\nconst ActivityBody = ({ currentModule, handleAnswers, started, links }) => {\n  return !started ? (\n    <Overview />\n  ) : (\n    <U.Sub6ColGrid>\n      {/* <U.ColorBlock SubGridBlue></U.ColorBlock> */}\n      {currentModule.type === 'display' ? (\n        <div className=\"injectParent\">\n          <InjectHTML markup={currentModule.contents} />\n        </div>\n      ) : (\n        <Question details={currentModule} handleAnswers={handleAnswers} />\n      )}\n    </U.Sub6ColGrid>\n  );\n};\n\nexport default ActivityBody;\n\n// // !started  ? (\n","/home/dscription/Code/coop/mern-jwt-auth/src/components/CreateQuestionForm/CreateQuestionForm.jsx",[],"/home/dscription/Code/coop/mern-jwt-auth/src/components/ActivityHeader/ActivityHeader.jsx",[],"/home/dscription/Code/coop/mern-jwt-auth/src/components/SideBarNav/SideBarNav.jsx",[],"/home/dscription/Code/coop/mern-jwt-auth/src/components/TuxComponents/FormComponents.js",[],"/home/dscription/Code/coop/mern-jwt-auth/src/components/SignupForm/EmailForm.jsx",[],"/home/dscription/Code/coop/mern-jwt-auth/src/components/SignupForm/GeneralForm.jsx",[],"/home/dscription/Code/coop/mern-jwt-auth/src/components/CreateGroup/CreateGroup.jsx",[],"/home/dscription/Code/coop/mern-jwt-auth/src/components/ModifyGroup/ModifyGroup.jsx",[],"/home/dscription/Code/coop/mern-jwt-auth/src/components/Question/Question.jsx",["244","245"],"/home/dscription/Code/coop/mern-jwt-auth/src/components/ActivityInvite/ActivityInvite.jsx",["246","247","248"],"import React, { useState } from 'react';\nimport ReactModal from 'react-modal';\nimport * as U from '../TuxComponents/UniversalComponents';\nimport * as L from '../TuxComponents/LoginComponents';\nimport EmailCheckbox from \"../../components/EmailCheckbox/EmailCheckbox\";\nimport groupAPI from \"../../services/groupService\";\nimport * as mailAPI from \"../../services/mail-api\";\nimport './ActivityInvite.css';\nconst ActivityInvite = ({ \n    isOpen, \n    setIsOpen, \n    groups,\n    setGroups,\n    selectedGroupIndex,\n    setSelectedGroupIndex,\n}) => {\n    const [newGroups, setNewGroups] = useState(\"\");\n    const handleSendInvite = async () => {\n        const groupToInvite = await groupAPI.update(groups[selectedGroupIndex]);\n        console.log(groupToInvite);\n        // TODO: send group info to nodemailer api\n        mailAPI.create(groupToInvite);\n    };\n    const handleCopyLink = () => {\n      //\n    };\n    const handleAddInvited = (index) => {\n        console.log(\"adding\", index);\n        // get the selected group\n        const group = groups[selectedGroupIndex];\n        const inviteList = group.invited;\n        // find the user in the invite list\n        const user = inviteList[index];\n        user.invited = true;\n        // make a copy of groups in state\n        const newGroups = groups;\n        newGroups[selectedGroupIndex] = group;\n        // set new groups to state\n        console.log(newGroups);\n        // setNewGroups(newGroups);\n        setGroups(newGroups);\n    };\n    const handleRemoveInvited = (index) => {\n        console.log(\"removing\", index);\n        // get the selected group\n        const group = groups[selectedGroupIndex];\n        const inviteList = group.invited;\n        // find the user in the invite list\n        const user = inviteList[index];\n        user.invited = false;\n        // make a copy of groups in state\n        const newGroups = groups;\n        newGroups[selectedGroupIndex] = group;\n        // set new groups to state\n        setNewGroups(newGroups);\n        // setGroups(newGroups);\n    };\n    return ( \n    <ReactModal\n        isOpen={ isOpen }\n        contentLabel={\"Invite Students\"}\n        ariaHideApp={ true }\n        // aria={\n        //     {\n            //         labelledby: \"heading\",\n            //         describedby: \"full description here\"\n            //     }\n            // }\n        shouldCloseOnEsc={ true }\n        shouldCloseOnOverlayClick={ true }\n        onRequestClose={() => setIsOpen(!isOpen) }\n        className='inviteModal'\n        overlayClassName='inviteModalOverlay'\n    >\n        <L.TuxFlower invite src=\"/images/circle.png\"></L.TuxFlower>\n        <L.LoginBox invite>\n            <U.Heading3 invite>Invite Students</U.Heading3>\n            <U.Normal invite>Group: {<i>group name</i>}</U.Normal>\n            {/* <div className=\"email\"> */}\n            <select\n                value={selectedGroupIndex}\n                onChange={(e) => setSelectedGroupIndex(e.target.value)}\n              >\n                <option value=\"\"></option>\n                {groups &&\n                  groups.length >= 0 &&\n                  groups.map((group, index) => (\n                    <option key={index} value={index}>\n                      {group.name}\n                    </option>\n                  ))}\n              </select>\n              <div className=\"email\">\n              {groups &&\n                groups.length >= 0 &&\n                selectedGroupIndex &&\n                groups[selectedGroupIndex].invited.map((user, index) => (\n                  <EmailCheckbox\n                    key={index}\n                    user={user}\n                    index={index}\n                    handleAddInvited={handleAddInvited}\n                    handleRemoveInvited={handleRemoveInvited}\n                  />\n                ))}\n                </div>\n            {/* </div> */}\n            <button className=\"send-invite\">Send Invite</button>\n            <p className=\"or\">or</p>\n            <button className=\"copy-link\">Copy Link<img src=\"/images/icons/copy-icon.png\" width=\"50\" height=\"50\" alt=\"copy icon\"></img></button>\n        </L.LoginBox>  \n    </ReactModal>\n     );\n}\nexport default ActivityInvite;","/home/dscription/Code/coop/mern-jwt-auth/src/components/Overview/Overview.jsx",[],"/home/dscription/Code/coop/mern-jwt-auth/src/components/InjectHTML/InjectHTML.jsx",[],"/home/dscription/Code/coop/mern-jwt-auth/src/components/ProgressBar/ProgressBar.jsx",[],"/home/dscription/Code/coop/mern-jwt-auth/src/components/TuxComponents/ActivitiesComponents.js",[],"/home/dscription/Code/coop/mern-jwt-auth/src/components/Answer/Answer.jsx",[],"/home/dscription/Code/coop/mern-jwt-auth/src/components/GroupUserTable/GroupUserTable.jsx",[],"/home/dscription/Code/coop/mern-jwt-auth/src/components/EmailCheckbox/EmailCheckbox.jsx",["249"],"import React, { useState, useEffect } from 'react';\nimport '../InviteModal/InviteModal.css';\n\nconst EmailCheckbox = ({\n  user,\n  index,\n  handleAddInvited,\n  handleRemoveInvited,\n}) => {\n  const [isChecked, setIsChecked] = useState('');\n  const [userIndex, setUserIndex] = useState('');\n\n  const handleChange = (e) => {\n    const { value: userIndex } = e.target;\n    setUserIndex('');\n    setIsChecked(!isChecked);\n    setUserIndex(userIndex);\n    // console.log(isChecked);\n  };\n\n  useEffect(() => {\n    console.log(isChecked);\n    console.log(userIndex);\n    isChecked === true && handleAddInvited(userIndex);\n    isChecked === false && handleRemoveInvited(userIndex);\n  }, [isChecked]);\n\n  return (\n    <label className=\"GroupInviteLabel\">\n      {user.email}\n      <input\n        className=\"GroupInviteCheckbox\"\n        type=\"checkbox\"\n        id={index}\n        name=\"email\"\n        checked={isChecked}\n        value={index}\n        onChange={handleChange}\n      />\n    </label>\n  );\n};\n\nexport default EmailCheckbox;\n","/home/dscription/Code/coop/mern-jwt-auth/src/components/Feedback/Feedback.jsx",[],"/home/dscription/Code/coop/mern-jwt-auth/src/SampleData/HeuristicsSampleData.js",[],"/home/dscription/Code/coop/mern-jwt-auth/src/components/ActivityLinks/ActivityLinks.jsx",[],{"ruleId":"250","severity":1,"message":"251","line":3,"column":42,"nodeType":"252","messageId":"253","endLine":3,"endColumn":48},{"ruleId":"254","replacedBy":"255"},{"ruleId":"256","replacedBy":"257"},{"ruleId":"250","severity":1,"message":"258","line":6,"column":13,"nodeType":"252","messageId":"253","endLine":6,"endColumn":14},{"ruleId":"250","severity":1,"message":"259","line":8,"column":8,"nodeType":"252","messageId":"253","endLine":8,"endColumn":19},{"ruleId":"260","severity":1,"message":"261","line":36,"column":29,"nodeType":"262","messageId":"263","endLine":36,"endColumn":30},{"ruleId":"264","severity":1,"message":"265","line":54,"column":1,"nodeType":"266","endLine":60,"endColumn":2},{"ruleId":"264","severity":1,"message":"265","line":66,"column":1,"nodeType":"266","endLine":72,"endColumn":3},{"ruleId":"250","severity":1,"message":"267","line":2,"column":10,"nodeType":"252","messageId":"253","endLine":2,"endColumn":14},{"ruleId":"250","severity":1,"message":"268","line":14,"column":19,"nodeType":"252","messageId":"253","endLine":14,"endColumn":29},{"ruleId":"250","severity":1,"message":"269","line":30,"column":9,"nodeType":"252","messageId":"253","endLine":30,"endColumn":26},{"ruleId":"250","severity":1,"message":"270","line":32,"column":13,"nodeType":"252","messageId":"253","endLine":32,"endColumn":18},{"ruleId":"250","severity":1,"message":"271","line":49,"column":9,"nodeType":"252","messageId":"253","endLine":49,"endColumn":24},{"ruleId":"250","severity":1,"message":"272","line":1,"column":27,"nodeType":"252","messageId":"253","endLine":1,"endColumn":36},{"ruleId":"250","severity":1,"message":"273","line":14,"column":24,"nodeType":"252","messageId":"253","endLine":14,"endColumn":39},{"ruleId":"250","severity":1,"message":"274","line":20,"column":9,"nodeType":"252","messageId":"253","endLine":20,"endColumn":24},{"ruleId":"250","severity":1,"message":"275","line":8,"column":10,"nodeType":"252","messageId":"253","endLine":8,"endColumn":14},{"ruleId":"250","severity":1,"message":"276","line":8,"column":16,"nodeType":"252","messageId":"253","endLine":8,"endColumn":28},{"ruleId":"264","severity":1,"message":"265","line":28,"column":1,"nodeType":"266","endLine":33,"endColumn":3},{"ruleId":"264","severity":1,"message":"265","line":4,"column":1,"nodeType":"266","endLine":10,"endColumn":3},{"ruleId":"264","severity":1,"message":"265","line":45,"column":1,"nodeType":"266","endLine":51,"endColumn":2},{"ruleId":"250","severity":1,"message":"277","line":1,"column":8,"nodeType":"252","messageId":"253","endLine":1,"endColumn":20},{"ruleId":"250","severity":1,"message":"258","line":6,"column":13,"nodeType":"252","messageId":"253","endLine":6,"endColumn":14},{"ruleId":"250","severity":1,"message":"278","line":6,"column":8,"nodeType":"252","messageId":"253","endLine":6,"endColumn":21},{"ruleId":"250","severity":1,"message":"272","line":1,"column":27,"nodeType":"252","messageId":"253","endLine":1,"endColumn":36},{"ruleId":"250","severity":1,"message":"279","line":4,"column":13,"nodeType":"252","messageId":"253","endLine":4,"endColumn":14},{"ruleId":"250","severity":1,"message":"280","line":17,"column":12,"nodeType":"252","messageId":"253","endLine":17,"endColumn":21},{"ruleId":"250","severity":1,"message":"281","line":18,"column":11,"nodeType":"252","messageId":"253","endLine":18,"endColumn":27},{"ruleId":"250","severity":1,"message":"282","line":24,"column":11,"nodeType":"252","messageId":"253","endLine":24,"endColumn":25},{"ruleId":"283","severity":1,"message":"284","line":26,"column":6,"nodeType":"285","endLine":26,"endColumn":17,"suggestions":"286"},"no-unused-vars","'Switch' is defined but never used.","Identifier","unusedVar","no-native-reassign",["287"],"no-negated-in-lhs",["288"],"'U' is defined but never used.","'authService' is defined but never used.","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'Link' is defined but never used.","'setResults' is assigned a value but never used.","'handleInputChange' is assigned a value but never used.","'value' is assigned a value but never used.","'sendEmailInvite' is assigned a value but never used.","'useEffect' is defined but never used.","'setActivityData' is assigned a value but never used.","'getActivityData' is assigned a value but never used.","'user' is defined but never used.","'activityData' is defined but never used.","'tokenService' is defined but never used.","'ActivityLinks' is defined but never used.","'A' is defined but never used.","'newGroups' is assigned a value but never used.","'handleSendInvite' is assigned a value but never used.","'handleCopyLink' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'handleAddInvited', 'handleRemoveInvited', and 'userIndex'. Either include them or remove the dependency array. If 'handleAddInvited' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["289"],"no-global-assign","no-unsafe-negation",{"desc":"290","fix":"291"},"Update the dependencies array to be: [handleAddInvited, handleRemoveInvited, isChecked, userIndex]",{"range":"292","text":"293"},[676,687],"[handleAddInvited, handleRemoveInvited, isChecked, userIndex]"]