[{"/Users/alexandriastephenson/code/tux/src/index.js":"1","/Users/alexandriastephenson/code/tux/src/serviceWorker.js":"2","/Users/alexandriastephenson/code/tux/src/pages/App/App.jsx":"3","/Users/alexandriastephenson/code/tux/src/services/userService.js":"4","/Users/alexandriastephenson/code/tux/src/services/authService.js":"5","/Users/alexandriastephenson/code/tux/src/components/TuxComponents/UniversalComponents.js":"6","/Users/alexandriastephenson/code/tux/src/pages/Signup/Signup.jsx":"7","/Users/alexandriastephenson/code/tux/src/pages/PreviewActivity/PreviewActivity.jsx":"8","/Users/alexandriastephenson/code/tux/src/pages/IndexActivities/IndexActivities.jsx":"9","/Users/alexandriastephenson/code/tux/src/pages/Landing/Landing.jsx":"10","/Users/alexandriastephenson/code/tux/src/pages/Login/Login.jsx":"11","/Users/alexandriastephenson/code/tux/src/pages/User/User.jsx":"12","/Users/alexandriastephenson/code/tux/src/pages/Manager/Manager.jsx":"13","/Users/alexandriastephenson/code/tux/src/pages/Activity/Activity.jsx":"14","/Users/alexandriastephenson/code/tux/src/components/NavBar/NavBar.jsx":"15","/Users/alexandriastephenson/code/tux/src/services/tokenService.js":"16","/Users/alexandriastephenson/code/tux/src/services/groupService.js":"17","/Users/alexandriastephenson/code/tux/src/services/mail-api.js":"18","/Users/alexandriastephenson/code/tux/src/services/activityService.js":"19","/Users/alexandriastephenson/code/tux/src/components/TuxComponents/LoginComponents.js":"20","/Users/alexandriastephenson/code/tux/src/components/TuxComponents/NavComponents.js":"21","/Users/alexandriastephenson/code/tux/src/SampleData/HeuristicsSampleData.js":"22","/Users/alexandriastephenson/code/tux/src/components/SignupForm/SignupForm.jsx":"23","/Users/alexandriastephenson/code/tux/src/components/ManagerStudentResults/ManagerStudentResults.jsx":"24","/Users/alexandriastephenson/code/tux/src/components/ManageGroupMembers/ManageGroupMembers.jsx":"25","/Users/alexandriastephenson/code/tux/src/components/SideBarNav/SideBarNav.jsx":"26","/Users/alexandriastephenson/code/tux/src/components/ActivityBody/ActivityBody.jsx":"27","/Users/alexandriastephenson/code/tux/src/components/ManagerActivities/ManagerActivities.jsx":"28","/Users/alexandriastephenson/code/tux/src/components/ActivityHeader/ActivityHeader.jsx":"29","/Users/alexandriastephenson/code/tux/src/components/SignupForm/GeneralForm.jsx":"30","/Users/alexandriastephenson/code/tux/src/components/SignupForm/EmailForm.jsx":"31","/Users/alexandriastephenson/code/tux/src/components/CreateGroup/CreateGroup.jsx":"32","/Users/alexandriastephenson/code/tux/src/components/ModifyGroup/ModifyGroup.jsx":"33","/Users/alexandriastephenson/code/tux/src/components/Overview/Overview.jsx":"34","/Users/alexandriastephenson/code/tux/src/components/ProgressBar/ProgressBar.jsx":"35","/Users/alexandriastephenson/code/tux/src/components/Question/Question.jsx":"36","/Users/alexandriastephenson/code/tux/src/components/InjectHTML/InjectHTML.jsx":"37","/Users/alexandriastephenson/code/tux/src/components/ActivityLinks/ActivityLinks.jsx":"38","/Users/alexandriastephenson/code/tux/src/components/ActivityInvite/ActivityInvite.jsx":"39","/Users/alexandriastephenson/code/tux/src/components/TuxComponents/ActivitiesComponents.js":"40","/Users/alexandriastephenson/code/tux/src/components/GroupUserTable/GroupUserTable.jsx":"41","/Users/alexandriastephenson/code/tux/src/components/Feedback/Feedback.jsx":"42","/Users/alexandriastephenson/code/tux/src/components/EmailCheckbox/EmailCheckbox.jsx":"43","/Users/alexandriastephenson/code/tux/src/components/Answer/Answer.jsx":"44"},{"size":671,"mtime":1610994940466,"results":"45","hashOfConfig":"46"},{"size":5086,"mtime":1610554190689,"results":"47","hashOfConfig":"46"},{"size":2597,"mtime":1611171648699,"results":"48","hashOfConfig":"46"},{"size":1319,"mtime":1611171648700,"results":"49","hashOfConfig":"46"},{"size":1735,"mtime":1611171648700,"results":"50","hashOfConfig":"46"},{"size":13115,"mtime":1611172794758,"results":"51","hashOfConfig":"46"},{"size":814,"mtime":1610554190688,"results":"52","hashOfConfig":"46"},{"size":3156,"mtime":1610554190687,"results":"53","hashOfConfig":"46"},{"size":3105,"mtime":1610554190686,"results":"54","hashOfConfig":"46"},{"size":752,"mtime":1610554190686,"results":"55","hashOfConfig":"46"},{"size":3056,"mtime":1611171648699,"results":"56","hashOfConfig":"46"},{"size":649,"mtime":1611171648699,"results":"57","hashOfConfig":"46"},{"size":3254,"mtime":1611171648699,"results":"58","hashOfConfig":"46"},{"size":3390,"mtime":1611174923837,"results":"59","hashOfConfig":"46"},{"size":1263,"mtime":1611172710022,"results":"60","hashOfConfig":"46"},{"size":726,"mtime":1610554190692,"results":"61","hashOfConfig":"46"},{"size":1288,"mtime":1610554190691,"results":"62","hashOfConfig":"46"},{"size":398,"mtime":1610554190691,"results":"63","hashOfConfig":"46"},{"size":1923,"mtime":1610554190689,"results":"64","hashOfConfig":"46"},{"size":2602,"mtime":1611171648697,"results":"65","hashOfConfig":"46"},{"size":781,"mtime":1611171648697,"results":"66","hashOfConfig":"46"},{"size":234613,"mtime":1611171648685,"results":"67","hashOfConfig":"46"},{"size":2475,"mtime":1610554190679,"results":"68","hashOfConfig":"46"},{"size":799,"mtime":1610554190676,"results":"69","hashOfConfig":"46"},{"size":1768,"mtime":1610994947326,"results":"70","hashOfConfig":"46"},{"size":1821,"mtime":1610994940464,"results":"71","hashOfConfig":"46"},{"size":875,"mtime":1611174894167,"results":"72","hashOfConfig":"46"},{"size":2420,"mtime":1611171648695,"results":"73","hashOfConfig":"46"},{"size":516,"mtime":1611171648686,"results":"74","hashOfConfig":"46"},{"size":3432,"mtime":1610994940464,"results":"75","hashOfConfig":"46"},{"size":1680,"mtime":1611171648696,"results":"76","hashOfConfig":"46"},{"size":699,"mtime":1610554190585,"results":"77","hashOfConfig":"46"},{"size":1779,"mtime":1610994947326,"results":"78","hashOfConfig":"46"},{"size":242,"mtime":1610994940463,"results":"79","hashOfConfig":"46"},{"size":579,"mtime":1610554190677,"results":"80","hashOfConfig":"46"},{"size":1521,"mtime":1611171648695,"results":"81","hashOfConfig":"46"},{"size":1832,"mtime":1611171648687,"results":"82","hashOfConfig":"46"},{"size":669,"mtime":1611171648686,"results":"83","hashOfConfig":"46"},{"size":4352,"mtime":1611171648686,"results":"84","hashOfConfig":"46"},{"size":2392,"mtime":1611171648696,"results":"85","hashOfConfig":"46"},{"size":1013,"mtime":1610554190586,"results":"86","hashOfConfig":"46"},{"size":792,"mtime":1610554190585,"results":"87","hashOfConfig":"46"},{"size":1022,"mtime":1610554190585,"results":"88","hashOfConfig":"46"},{"size":677,"mtime":1611171648687,"results":"89","hashOfConfig":"46"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"93"},"mcrid3",{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"93"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"93"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"93"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"93"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"93"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"93"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"93"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"93"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"93"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"93"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"93"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181","usedDeprecatedRules":"93"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190","usedDeprecatedRules":"93"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},"/Users/alexandriastephenson/code/tux/src/index.js",["193"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport './index.css';\nimport App from './pages/App/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <Router>\n    <React.StrictMode>\n      <Route render={({ history }) => <App history={history} />} />\n    </React.StrictMode>\n  </Router>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n",["194","195"],"/Users/alexandriastephenson/code/tux/src/serviceWorker.js",[],"/Users/alexandriastephenson/code/tux/src/pages/App/App.jsx",["196"],"import React, { useState, useEffect } from 'react';\nimport { Route } from 'react-router-dom';\nimport Signup from '../Signup/Signup';\nimport Login from '../Login/Login';\nimport User from '../User/User';\nimport * as U from '../../components/TuxComponents/UniversalComponents';\nimport NavBar from '../../components/NavBar/NavBar';\nimport authService from '../../services/authService';\nimport Landing from '../Landing/Landing';\nimport PreviewActivity from '../PreviewActivity/PreviewActivity';\nimport IndexActivities from '../IndexActivities/IndexActivities';\nimport './App.css';\nimport Manager from '../Manager/Manager';\nimport Activity from '../Activity/Activity';\nimport userService from '../../services/userService'\n\nconst App = () => {\n  const [user, setUser] = useState(null)\n  \n  const getUser = async () => {\n    const userProfile = await userService.getCurrentUser()\n    setUser(userProfile)\n  }\n\n  const handleLogout = async () => {\n    setUser(null)\n    authService.logoutFromGoogle()\n  }\n\n  useEffect (()=> {\n    getUser()\n  }, [])\n\n\n    const NavRoutes = () => {\n      // These routes will render the NavBar\n      return (\n        <>\n          <NavBar user={user} handleLogout={handleLogout}/>\n          <Route exact path=\"/activities\" render={() => <IndexActivities />} />\n          <Route exact path=\"/manager-dashboard\" render={() => <Manager />} />\n          <Route\n            exact\n            path=\"/preview-activity\"\n            render={({ location }) => <PreviewActivity location={location} />}\n          />\n          <Route\n            exact\n            path=\"/activity/heuristics\"\n            render={() => <Activity activityId=\"5ff8b36e56fdee429c008d3a\" />}\n          />\n          <Route\n            exact\n            path=\"/activity/accessability\"\n            render={() => <Activity />}\n          />\n        </>\n      );\n    };\n    return (\n      <>\n        {/* These Routes will not render a Navbar. */}\n        <Route\n          exact\n          path=\"/\"\n          render={() => (user ? <User user={user} /> : <Landing />)}\n        />\n\n        <Route\n          path=\"/signup/:groupId?/:email?\"\n          render={({ history, match }) => (\n            <Signup\n              history={history}\n              match={match}\n            />\n          )}\n        />\n        <Route\n          exact\n          path=\"/login\"\n          render={({ history }) => (\n            <Login\n              history={history}\n            />\n          )}\n        />\n\n        {/* These routes will render the NavBar */}\n        <Route component={NavRoutes} />\n      </>\n    );\n  }\n\nexport default App;\n","/Users/alexandriastephenson/code/tux/src/services/userService.js",["197","198"],"import tokenService from \"../services/tokenService\";\nconst BASE_URL = \"/api/users/\";\n\n// restrict access to functions on the front end\n\n// this one works cory\nfunction getAllUsers() {\n  return fetch(\n    BASE_URL,\n    {\n      headers: { 'Authorization': \"Bearer \" + tokenService.getToken() },\n    },\n    { mode: \"cors\" }\n  ).then((res) => res.json());\n}\n\n// this one works cory\nfunction deleteUser(id) {\n  return fetch(`${BASE_URL}${id}`, {\n    method: 'DELETE',\n    headers: {\n      'Authorization': 'Bearer ' + tokenService.getToken()\n    }\n    }, \n    {mode: \"cors\"})\n  .then(res => res.json());\n}\n\n// this one works cory\nfunction getUser(user) {\n  return fetch(`${BASE_URL}${user.id}`, {mode: \"cors\"})\n  .then(res => res.json())\n}\n\nfunction getCurrentUser() {\n  return fetch(`${BASE_URL}`+'getMe', {mode: 'cors'})\n  .then(res => res.json())\n}\n\n// this one works cory\nfunction updateUser(user) {\n  // console.log('update service function', user)\n  return fetch(`${BASE_URL}${user._id}`, {\n      method: \"PUT\",\n      headers: {\n        'content-type': 'application/json', \n        'Authorization': 'Bearer ' + tokenService.getToken()\n      },\n      body: JSON.stringify(user)\n  }, {mode: \"cors\"})\n  .then(res => res.json());\n}\n\nexport default {\n  getAllUsers,\n  deleteUser,\n  getUser,\n  updateUser,\n  getCurrentUser\n}","/Users/alexandriastephenson/code/tux/src/services/authService.js",["199"],"import tokenService from \"./tokenService\";\nconst BASE_URL = '/api/auth/';\n\nfunction signup(user) {\n  return fetch(BASE_URL + 'signup', {\n    method: 'POST',\n    headers: new Headers({'Content-Type': 'application/json'}),\n    body: JSON.stringify(user)\n  })\n  .then(res => {\n    // console.log(res, '<-- response object')\n    return res.json();\n  })\n  .then(json => {\n    if(json.token) return json;\n    // console.log(json, '<-- the error')\n    throw new Error(`${json.err}`)\n  })\n  .then(({ token }) => {\n    tokenService.setToken(token);\n    window.location = \n    'http://localhost:3000/activity/heuristics'\n    // 'http://taketux.io/activity/heuristics'\n    // 'http://tux-staging.herokuapp.com/activity/heuristics'\n  })\n}\n\nfunction getUser() {\n  return tokenService.getUserFromToken();\n}\n\nfunction logout() {\n  tokenService.removeToken();\n}\n\nfunction logoutFromGoogle() {\n  return fetch(BASE_URL + \"logout\")\n  .then(\n    console.log('logging out from google')\n  )\n}\n \nfunction login(creds) {\n  // console.log('auth service login function -- creds', creds)\n  return fetch(BASE_URL + \"login\", {\n    method: \"POST\",\n    headers: new Headers({ \"Content-Type\": \"application/json\" }),\n    body: JSON.stringify(creds),\n  })\n  .then((res) => {\n    // Valid login if we have a status of 2xx (res.ok)\n    if (res.ok) return res.json();\n    throw new Error(\"Bad Credentials!\");\n  })\n  .then(({ token }) => \n  tokenService.setToken(token)\n  )\n}\n\n// add this function to the google strategy:\n// getJWTAfterGoogleLogin (req, res) <--this is on the front end\n// respond with a token from the server\n// put token in localStorage\n// set the token to the google login\n\nexport default {\n  signup,\n  getUser,\n  logout,\n  logoutFromGoogle,\n  login,\n};","/Users/alexandriastephenson/code/tux/src/components/TuxComponents/UniversalComponents.js",[],"/Users/alexandriastephenson/code/tux/src/pages/Signup/Signup.jsx",[],"/Users/alexandriastephenson/code/tux/src/pages/PreviewActivity/PreviewActivity.jsx",[],"/Users/alexandriastephenson/code/tux/src/pages/IndexActivities/IndexActivities.jsx",[],"/Users/alexandriastephenson/code/tux/src/pages/Landing/Landing.jsx",[],"/Users/alexandriastephenson/code/tux/src/pages/Login/Login.jsx",[],"/Users/alexandriastephenson/code/tux/src/pages/User/User.jsx",["200"],"import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\n// The User Page will get information relative to the user (activities, reports, profile info) through props coming in from App.js\n// It will set that information to state.\n// It will render that information to the screen and allow the User/Student to take certain actions.\n\nclass User extends Component {\n  state = {\n    // TODO: set from props\n  };\n  render() {\n    return (\n      <>\n        <h1>You have successfully logged in. User Landing Page</h1>\n        {/* // TODO: Render information to screen from state. */}\n      </>\n    );\n  }\n}\n\nexport default User;\n","/Users/alexandriastephenson/code/tux/src/pages/Manager/Manager.jsx",["201","202","203","204"],"import React, { useState, useEffect } from 'react';\n// import { Button } from 'react-bootstrap';\n// import 'bootstrap/dist/css/bootstrap.min.css';\nimport groupAPI from '../../services/groupService';\nimport * as mailAPI from '../../services/mail-api';\nimport ManagerActivites from '../../components/ManagerActivities/ManagerActivities';\nimport ManagerStudentResults from '../../components/ManagerStudentResults/ManagerStudentResults';\n\nimport ManageGroupMembers from '../../components/ManageGroupMembers/ManageGroupMembers';\n\nconst Manager = () => {\n  const [newGroupName, setNewGroupName] = useState('');\n  const [textInput, setTextInput] = useState('');\n  const [results, setResults] = useState('');\n  const [groups, setGroups] = useState('');\n  const [selectedGroupIndex, setSelectedGroupIndex] = useState('');\n\n  const getAllGroups = async () => {\n    return await groupAPI.getAll();\n  };\n\n  useEffect(() => {\n    const retreivedGroups = getAllGroups();\n    console.log(retreivedGroups);\n    retreivedGroups.then((newGroups) => {\n      setGroups(newGroups);\n    });\n  }, []);\n\n  const handleInputChange = (e) => {\n    e.preventDefault();\n    const { value } = e.target;\n    // setInput(value);\n  };\n\n  const handleTextInputChange = (e) => {\n    e.preventDefault();\n    const { value } = e.target;\n    setTextInput(value);\n  };\n\n  const splitGroupMembers = (textInput) => {\n    // Split and trim emails\n    const members = textInput.split(',');\n    const trimmed = members.map((member) => member.trim());\n    return trimmed;\n  };\n\n  const sendEmailInvite = async (group) => {\n    await mailAPI.create(group);\n  };\n\n  const handleAddToGroup = async () => {\n    console.log(groups);\n    const emails = splitGroupMembers(textInput);\n    const inviteList = [];\n    emails.forEach((email) =>\n      inviteList.push({ email: email, invited: false, signedUp: false })\n    );\n    const updatedGroups = groups;\n    const selectedGroup = updatedGroups[selectedGroupIndex];\n\n    inviteList.forEach((member) => {\n      selectedGroup.invited.push({\n        email: member.email,\n        invited: false,\n        signedUp: false,\n      });\n    });\n\n    const update = await groupAPI.update(selectedGroup);\n    console.log(update);\n    setGroups(updatedGroups);\n    setTextInput('');\n  };\n\n  const handleCreateGroup = async () => {\n    const group = await groupAPI.create({ name: newGroupName });\n    const updatedGroups = groups;\n    updatedGroups.push(group);\n    setGroups(updatedGroups);\n    setNewGroupName('');\n  };\n\n  return (\n    <>\n      <h1>Manager Landing Page</h1>\n      <ManagerStudentResults results={results} />\n      <ManagerActivites\n        groups={groups}\n        setGroups={setGroups}\n        selectedGroupIndex={selectedGroupIndex}\n        setSelectedGroupIndex={setSelectedGroupIndex}\n      />\n      <ManageGroupMembers\n        groups={groups}\n        selectedGroupIndex={selectedGroupIndex}\n        setSelectedGroupIndex={setSelectedGroupIndex}\n        textInput={textInput}\n        handleTextInputChange={handleTextInputChange}\n        handleAddToGroup={handleAddToGroup}\n        newGroupName={newGroupName}\n        setNewGroupName={setNewGroupName}\n        handleCreateGroup={handleCreateGroup}\n      />\n    </>\n  );\n};\n\nexport default Manager;\n","/Users/alexandriastephenson/code/tux/src/pages/Activity/Activity.jsx",["205","206","207"],"/Users/alexandriastephenson/code/tux/src/components/NavBar/NavBar.jsx",[],"/Users/alexandriastephenson/code/tux/src/services/tokenService.js",["208"],"function setToken(token) {\n  localStorage.setItem(\"token\", token);\n}\n\nfunction getToken() {\n  let token = localStorage.getItem(\"token\");\n  if (token) {\n    // Check if expired, remove if it is\n    const payload = JSON.parse(atob(token.split(\".\")[1]));\n    // JWT's exp is expressed in seconds, not milliseconds, so convert\n    if (payload.exp < Date.now() / 1000) {\n      localStorage.removeItem(\"token\");\n      token = null;\n    }\n  }\n  return token;\n}\n\nfunction getUserFromToken() {\n  const token = getToken();\n  return token ? JSON.parse(atob(token.split(\".\")[1])).user : null;\n}\n\nfunction removeToken() {\n  localStorage.removeItem(\"token\");\n}\n\nexport default {\n  setToken,\n  getToken,\n  getUserFromToken,\n  removeToken,\n};","/Users/alexandriastephenson/code/tux/src/services/groupService.js",["209"],"import tokenService from \"../services/tokenService\";\nconst BASE_URL = \"/api/groups/\";\n\nfunction create(group) {\n    const myToken = tokenService.getToken()\n    console.log(myToken)\n    return fetch(BASE_URL, {\n        method: 'POST',\n        headers: { \n            'content-type': 'application/json', \n            // 'Authorization': 'Bearer' + tokenService.getToken() \n        },\n        body: JSON.stringify(group) \n        }, { mode: 'cors' })\n        .then(res => res.json());\n}\n\nfunction getAll() {\n    return fetch(BASE_URL, { mode: 'cors' })\n    .then(res => res.json())\n}\n\nfunction deleteOne(id) {\n    return fetch(`${BASE_URL}${id}`, {\n        method: 'DELETE',\n        headers: {'Authorization': 'Bearer ' + tokenService.getToken()}\n    }, {mode: \"cors\"})\n    .then(res => res.json());\n}\n\nfunction getOne(group) {\n    return fetch(`${BASE_URL}${group}`, {mode: \"cors\"})\n    .then(res => res.json())\n}\n\nfunction update(group) {\n    return fetch(`${BASE_URL}${group._id}`, {\n        method: \"PUT\",\n        headers: {'content-type': 'application/json', 'Authorization': 'Bearer ' + tokenService.getToken()},\n        body: JSON.stringify(group)\n    }, {mode: \"cors\"})\n    .then(res => res.json());\n}\n\nexport default {\n    create,\n    getAll,\n    deleteOne,\n    getOne,\n    update\n}","/Users/alexandriastephenson/code/tux/src/services/mail-api.js",["210"],"import tokenService from '../services/tokenService';\nconst BASE_URL = '/api/nodemail/';\n\nexport function create(group) {\n    return fetch(BASE_URL, {\n        method: \"POST\",\n        headers: { 'content-type': 'application/json', \n        // 'Authorization': 'Bearer ' + tokenService.getToken() \n    },\n        body: JSON.stringify(group)\n    }, { mode: \"cors\" })\n        .then(res => res.json());\n}","/Users/alexandriastephenson/code/tux/src/services/activityService.js",["211"],"import tokenService from '../services/tokenService';\nconst BASE_URL = '/api/activities/';\n\nexport default {\n  create,\n  getAll,\n  deleteOne,\n  getOne,\n  update,\n};\n\n// this works cory\nexport function create(activity) {\n    console.log('create an activity')\n  return fetch(\n    BASE_URL,\n    {\n      method: 'POST',\n      headers: {\n        'content-type': 'application/json',\n        'Authorization': 'Bearer' + tokenService.getToken()\n      },\n      body: JSON.stringify(activity),\n    },\n    {\n      mode: 'cors',\n    }\n  ).then((res) => res.json());\n}\n\n// this works cory\nfunction getAll() {\n    console.log('get all activities')\n  return fetch(\n    BASE_URL,\n    {\n      method: 'GET',\n      headers: {\n        'content-type': 'application/json',\n        //  'Authorization': 'Bearer' + tokenService.getToken()\n      },\n    },\n    { mode: 'cors' }\n  ).then((res) => res.json());\n}\n\n// this works cory\nfunction deleteOne(id) {\n    console.log('delete activity')\n  return fetch(\n    `${BASE_URL}${id}`,\n    {\n      method: 'DELETE',\n      headers: { Authorization: 'Bearer ' + tokenService.getToken() },\n    },\n    { mode: 'cors' }\n  ).then((res) => res.json());\n}\n\n// this works cory\nfunction getOne(activityId) {\n    console.log('one activity')\n  return fetch(\n      `${BASE_URL}${activityId}`, \n      {\n        method: 'GET',\n        headers: {\n          'content-type': 'application/json',\n          // 'Authorization': 'Bearer' + tokenService.getToken()\n        },\n      },\n      {  mode: 'cors' }\n    ).then((res) => res.json());\n}\n\n// this works cory\nfunction update(activity) {\n    return fetch(\n      `${BASE_URL}${activity._id}`,\n      {\n        method: 'PUT',\n        headers: {\n          'content-type': 'application/json',\n        //   Authorization: 'Bearer ' + tokenService.getToken(),\n        },\n        body: JSON.stringify(activity),\n      },\n      { mode: 'cors' }\n    ).then((res) => res.json());\n  }\n","/Users/alexandriastephenson/code/tux/src/components/TuxComponents/LoginComponents.js",[],"/Users/alexandriastephenson/code/tux/src/components/TuxComponents/NavComponents.js",[],"/Users/alexandriastephenson/code/tux/src/SampleData/HeuristicsSampleData.js",[],"/Users/alexandriastephenson/code/tux/src/components/SignupForm/SignupForm.jsx",["212"],"import React from 'react';\nimport { Formik, Form } from 'formik';\nimport EmailForm from './EmailForm';\nimport GeneralForm from './GeneralForm';\nimport authAPI from '../../services/authService';\nimport * as U from '../TuxComponents/UniversalComponents'\n\nfunction validateEmail(value) {\n  let error;\n  if (!value) {\n    error = 'Email Required';\n    console.log(error);\n  } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(value)) {\n    error = 'Invalid email address';\n    console.log(error);\n  } else {\n    error = '';\n  }\n  return error;\n}\n\nfunction validatePasswords(password, passwordConf) {\n  let error;\n  error = password !== passwordConf ? 'Passwords Must Match' : '';\n  return error;\n}\n\nconst SignupForm = ({groupId, email}) => {\n  return (\n    <Formik\n      initialValues={{\n        userData: {\n          email: email,\n          firstName: '',\n          lastName: '',\n          password: '',\n          passwordConf: '',\n        },\n        continue: false,\n      }}\n      onSubmit={(values) => {\n        console.log(values);\n        authAPI.signup(values.userData);\n      }}\n      validate={(values) => {\n        const errors = {};\n        if (values.userData.email) {\n          const error = validateEmail(values.userData.email);\n          error.length > 0 && (errors.email = error);\n        }\n\n        // TODO: Need better password validation.\n        if (!values.userData.password) {\n          const error = 'Password Required';\n          errors.password = error;\n        }\n\n        if (values.userData.password && values.userData.passwordConf) {\n          const error = validatePasswords(\n            values.userData.password,\n            values.userData.passwordConf\n          );\n          error.length > 0 && (errors.passwordConf = error);\n        }\n        return errors;\n      }}\n    >\n      {({ errors, touched, handleChange, values, handleSubmit }) => (\n        <Form onSubmit={handleSubmit}>\n          {!values.continue && (\n            <EmailForm \n              errors={errors}\n              touched={touched}\n              values={values}\n              handleChange={handleChange}\n            />\n          )}\n          {values.continue && (\n            <GeneralForm\n              errors={errors}\n              touched={touched}\n              values={values}\n              handleChange={handleChange}\n              handleSubmit={handleSubmit}\n            />\n          )}\n        </Form>\n      )}\n    </Formik>\n  );\n};\n\nexport default SignupForm;\n","/Users/alexandriastephenson/code/tux/src/components/ManagerStudentResults/ManagerStudentResults.jsx",[],"/Users/alexandriastephenson/code/tux/src/components/ManageGroupMembers/ManageGroupMembers.jsx",[],"/Users/alexandriastephenson/code/tux/src/components/SideBarNav/SideBarNav.jsx",[],"/Users/alexandriastephenson/code/tux/src/components/ActivityBody/ActivityBody.jsx",["213"],"/Users/alexandriastephenson/code/tux/src/components/ManagerActivities/ManagerActivities.jsx",[],"/Users/alexandriastephenson/code/tux/src/components/ActivityHeader/ActivityHeader.jsx",[],"/Users/alexandriastephenson/code/tux/src/components/SignupForm/GeneralForm.jsx",[],"/Users/alexandriastephenson/code/tux/src/components/SignupForm/EmailForm.jsx",[],"/Users/alexandriastephenson/code/tux/src/components/CreateGroup/CreateGroup.jsx",[],"/Users/alexandriastephenson/code/tux/src/components/ModifyGroup/ModifyGroup.jsx",[],"/Users/alexandriastephenson/code/tux/src/components/Overview/Overview.jsx",[],"/Users/alexandriastephenson/code/tux/src/components/ProgressBar/ProgressBar.jsx",[],"/Users/alexandriastephenson/code/tux/src/components/Question/Question.jsx",["214","215"],"import React, { useState, useEffect } from 'react';\nimport Feedback from '../Feedback/Feedback';\nimport * as U from '../TuxComponents/UniversalComponents';\nimport * as A from '../TuxComponents/ActivitiesComponents';\nimport Answer from '../Answer/Answer';\n\nconst Question = ({ details }) => {\n  const [response, setResponse] = useState(null);\n  // const [bkgrdColor, setbkgrdColor] = useState(['blue', 'green', 'red'])\n\n  const { problemStatement, media, answers } = details.contents;\n\n  const handleResponse = (answer, index) => {\n    setResponse({ selection: answer, selectionIndex: index });\n  };\n\n  return (\n    <U.Sub6ColGrid>\n      <U.ColorBlock SubGridBlue></U.ColorBlock>\n      {/* <A.ProblemStatement>{problemStatement}</A.ProblemStatement> */}\n      <div dangerouslySetInnerHTML={{ __html: problemStatement }}></div>\n      <U.FlexBox spaceAround>\n        <img src={media} alt=\"\" />\n        <U.FlexBox column>\n          {answers.map((answer, index) => (\n            <Answer\n              key={index}\n              response={response}\n              index={index}\n              handleResponse={handleResponse}\n              answer={answer}\n              disabled={\n                !response\n                  ? false\n                  : response.selectionIndex === index\n                  ? false\n                  : true\n              }\n            />\n          ))}\n        </U.FlexBox>\n      </U.FlexBox>\n      {response && <Feedback response={response} />}\n    </U.Sub6ColGrid>\n  );\n};\n\nexport default Question;\n","/Users/alexandriastephenson/code/tux/src/components/InjectHTML/InjectHTML.jsx",[],"/Users/alexandriastephenson/code/tux/src/components/ActivityLinks/ActivityLinks.jsx",[],"/Users/alexandriastephenson/code/tux/src/components/ActivityInvite/ActivityInvite.jsx",["216","217","218"],"import React, { useState } from 'react';\nimport ReactModal from 'react-modal';\nimport * as U from '../TuxComponents/UniversalComponents';\nimport * as L from '../TuxComponents/LoginComponents';\nimport EmailCheckbox from \"../../components/EmailCheckbox/EmailCheckbox\";\nimport groupAPI from \"../../services/groupService\";\nimport * as mailAPI from \"../../services/mail-api\";\nimport './ActivityInvite.css';\nconst ActivityInvite = ({ \n    isOpen, \n    setIsOpen, \n    groups,\n    setGroups,\n    selectedGroupIndex,\n    setSelectedGroupIndex,\n}) => {\n    const [newGroups, setNewGroups] = useState(\"\");\n    const handleSendInvite = async () => {\n        const groupToInvite = await groupAPI.update(groups[selectedGroupIndex]);\n        console.log(groupToInvite);\n        // TODO: send group info to nodemailer api\n        mailAPI.create(groupToInvite);\n    };\n    const handleCopyLink = () => {\n      //\n    };\n    const handleAddInvited = (index) => {\n        console.log(\"adding\", index);\n        // get the selected group\n        const group = groups[selectedGroupIndex];\n        const inviteList = group.invited;\n        // find the user in the invite list\n        const user = inviteList[index];\n        user.invited = true;\n        // make a copy of groups in state\n        const newGroups = groups;\n        newGroups[selectedGroupIndex] = group;\n        // set new groups to state\n        console.log(newGroups);\n        // setNewGroups(newGroups);\n        setGroups(newGroups);\n    };\n    const handleRemoveInvited = (index) => {\n        console.log(\"removing\", index);\n        // get the selected group\n        const group = groups[selectedGroupIndex];\n        const inviteList = group.invited;\n        // find the user in the invite list\n        const user = inviteList[index];\n        user.invited = false;\n        // make a copy of groups in state\n        const newGroups = groups;\n        newGroups[selectedGroupIndex] = group;\n        // set new groups to state\n        setNewGroups(newGroups);\n        // setGroups(newGroups);\n    };\n    return ( \n    <ReactModal\n        isOpen={ isOpen }\n        contentLabel={\"Invite Students\"}\n        ariaHideApp={ true }\n        // aria={\n        //     {\n            //         labelledby: \"heading\",\n            //         describedby: \"full description here\"\n            //     }\n            // }\n        shouldCloseOnEsc={ true }\n        shouldCloseOnOverlayClick={ true }\n        onRequestClose={() => setIsOpen(!isOpen) }\n        className='inviteModal'\n        overlayClassName='inviteModalOverlay'\n    >\n        <L.TuxFlower invite src=\"/images/tuxFlower.png\"></L.TuxFlower>\n        <L.LoginBox invite>\n            <U.Heading3 invite>Invite Students</U.Heading3>\n            <U.Normal invite>Group: {<i>group name</i>}</U.Normal>\n            {/* <div className=\"email\"> */}\n            <select\n                className=\"selectGroup\"\n                value={selectedGroupIndex}\n                onChange={(e) => setSelectedGroupIndex(e.target.value)}\n              >\n                <option value=\"\"></option>\n                {groups &&\n                  groups.length >= 0 &&\n                  groups.map((group, index) => (\n                    <option \n                      key={index} \n                      value={index}>\n                      {group.name}\n                    </option>\n                  ))}\n              </select>\n              <div className=\"group-email-box\">\n              {groups &&\n                groups.length >= 0 &&\n                selectedGroupIndex &&\n                groups[selectedGroupIndex].invited.map((user, index) => (\n                  <EmailCheckbox\n                    className=\"GroupInviteCheckbox\"\n                    key={index}\n                    user={user}\n                    index={index}\n                    handleAddInvited={handleAddInvited}\n                    handleRemoveInvited={handleRemoveInvited}\n                  />\n                ))}\n                </div>\n            {/* </div> */}\n            <button className=\"send-invite\">Send Invite</button>\n            <p className=\"or\">or</p>\n            <button className=\"copy-link\">Copy Link<img className=\"copy\" src=\"/images/icons/copy-icon.png\" width=\"28\" height=\"28\" alt=\"copy icon\"></img></button>\n        </L.LoginBox>  \n    </ReactModal>\n     );\n}\nexport default ActivityInvite;","/Users/alexandriastephenson/code/tux/src/components/TuxComponents/ActivitiesComponents.js",[],"/Users/alexandriastephenson/code/tux/src/components/GroupUserTable/GroupUserTable.jsx",[],"/Users/alexandriastephenson/code/tux/src/components/Feedback/Feedback.jsx",[],"/Users/alexandriastephenson/code/tux/src/components/EmailCheckbox/EmailCheckbox.jsx",["219"],"import React, { useState, useEffect } from 'react';\nimport '../InviteModal/InviteModal.css';\n\nconst EmailCheckbox = ({\n  user,\n  index,\n  handleAddInvited,\n  handleRemoveInvited,\n}) => {\n  const [isChecked, setIsChecked] = useState('');\n  const [userIndex, setUserIndex] = useState('');\n\n  const handleChange = (e) => {\n    const { value: userIndex } = e.target;\n    setUserIndex('');\n    setIsChecked(!isChecked);\n    setUserIndex(userIndex);\n    // console.log(isChecked);\n  };\n\n  useEffect(() => {\n    console.log(isChecked);\n    console.log(userIndex);\n    isChecked === true && handleAddInvited(userIndex);\n    isChecked === false && handleRemoveInvited(userIndex);\n  }, [isChecked]);\n\n  return (\n    <label className=\"GroupInviteLabel\">\n      {user.email}\n      <input\n        className=\"GroupInviteCheckbox\"\n        type=\"checkbox\"\n        id={index}\n        name=\"email\"\n        checked={isChecked}\n        value={index}\n        onChange={handleChange}\n      />\n    </label>\n  );\n};\n\nexport default EmailCheckbox;\n","/Users/alexandriastephenson/code/tux/src/components/Answer/Answer.jsx",[],{"ruleId":"220","severity":1,"message":"221","line":3,"column":42,"nodeType":"222","messageId":"223","endLine":3,"endColumn":48},{"ruleId":"224","replacedBy":"225"},{"ruleId":"226","replacedBy":"227"},{"ruleId":"220","severity":1,"message":"228","line":6,"column":13,"nodeType":"222","messageId":"223","endLine":6,"endColumn":14},{"ruleId":"229","severity":1,"message":"230","line":36,"column":29,"nodeType":"231","messageId":"232","endLine":36,"endColumn":30},{"ruleId":"233","severity":1,"message":"234","line":54,"column":1,"nodeType":"235","endLine":60,"endColumn":2},{"ruleId":"233","severity":1,"message":"234","line":66,"column":1,"nodeType":"235","endLine":72,"endColumn":3},{"ruleId":"220","severity":1,"message":"236","line":2,"column":10,"nodeType":"222","messageId":"223","endLine":2,"endColumn":14},{"ruleId":"220","severity":1,"message":"237","line":14,"column":19,"nodeType":"222","messageId":"223","endLine":14,"endColumn":29},{"ruleId":"220","severity":1,"message":"238","line":30,"column":9,"nodeType":"222","messageId":"223","endLine":30,"endColumn":26},{"ruleId":"220","severity":1,"message":"239","line":32,"column":13,"nodeType":"222","messageId":"223","endLine":32,"endColumn":18},{"ruleId":"220","severity":1,"message":"240","line":49,"column":9,"nodeType":"222","messageId":"223","endLine":49,"endColumn":24},{"ruleId":"220","severity":1,"message":"241","line":1,"column":27,"nodeType":"222","messageId":"223","endLine":1,"endColumn":36},{"ruleId":"220","severity":1,"message":"242","line":14,"column":24,"nodeType":"222","messageId":"223","endLine":14,"endColumn":39},{"ruleId":"220","severity":1,"message":"243","line":20,"column":9,"nodeType":"222","messageId":"223","endLine":20,"endColumn":24},{"ruleId":"233","severity":1,"message":"234","line":28,"column":1,"nodeType":"235","endLine":33,"endColumn":3},{"ruleId":"233","severity":1,"message":"234","line":45,"column":1,"nodeType":"235","endLine":51,"endColumn":2},{"ruleId":"220","severity":1,"message":"244","line":1,"column":8,"nodeType":"222","messageId":"223","endLine":1,"endColumn":20},{"ruleId":"233","severity":1,"message":"234","line":4,"column":1,"nodeType":"235","endLine":10,"endColumn":3},{"ruleId":"220","severity":1,"message":"228","line":6,"column":13,"nodeType":"222","messageId":"223","endLine":6,"endColumn":14},{"ruleId":"220","severity":1,"message":"245","line":6,"column":8,"nodeType":"222","messageId":"223","endLine":6,"endColumn":21},{"ruleId":"220","severity":1,"message":"241","line":1,"column":27,"nodeType":"222","messageId":"223","endLine":1,"endColumn":36},{"ruleId":"220","severity":1,"message":"246","line":4,"column":13,"nodeType":"222","messageId":"223","endLine":4,"endColumn":14},{"ruleId":"220","severity":1,"message":"247","line":17,"column":12,"nodeType":"222","messageId":"223","endLine":17,"endColumn":21},{"ruleId":"220","severity":1,"message":"248","line":18,"column":11,"nodeType":"222","messageId":"223","endLine":18,"endColumn":27},{"ruleId":"220","severity":1,"message":"249","line":24,"column":11,"nodeType":"222","messageId":"223","endLine":24,"endColumn":25},{"ruleId":"250","severity":1,"message":"251","line":26,"column":6,"nodeType":"252","endLine":26,"endColumn":17,"suggestions":"253"},"no-unused-vars","'Switch' is defined but never used.","Identifier","unusedVar","no-native-reassign",["254"],"no-negated-in-lhs",["255"],"'U' is defined but never used.","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'Link' is defined but never used.","'setResults' is assigned a value but never used.","'handleInputChange' is assigned a value but never used.","'value' is assigned a value but never used.","'sendEmailInvite' is assigned a value but never used.","'useEffect' is defined but never used.","'setActivityData' is assigned a value but never used.","'getActivityData' is assigned a value but never used.","'tokenService' is defined but never used.","'ActivityLinks' is defined but never used.","'A' is defined but never used.","'newGroups' is assigned a value but never used.","'handleSendInvite' is assigned a value but never used.","'handleCopyLink' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'handleAddInvited', 'handleRemoveInvited', and 'userIndex'. Either include them or remove the dependency array. If 'handleAddInvited' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["256"],"no-global-assign","no-unsafe-negation",{"desc":"257","fix":"258"},"Update the dependencies array to be: [handleAddInvited, handleRemoveInvited, isChecked, userIndex]",{"range":"259","text":"260"},[676,687],"[handleAddInvited, handleRemoveInvited, isChecked, userIndex]"]